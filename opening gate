#include <Servo.h>  // Include the Servo library

// Pin definitions
const int irSensorPin = 2;  // IR sensor input pin
const int greenLedPin = 12;  // Green LED pin
const int redLedPin = 13;  // Red LED pin
const int servoPin = 9;  // Servo motor pin

// Create a servo object
Servo myServo;

// Variables to store the sensor state
int irSensorState = 0;  // Variable to hold IR sensor state

void setup() {
  // Initialize the pins
  pinMode(irSensorPin, INPUT);  // IR sensor as input
  pinMode(greenLedPin, OUTPUT);  // Green LED as output
  pinMode(redLedPin, OUTPUT);  // Red LED as output
  myServo.attach(servoPin);  // Attach the servo to the servo pin
  
  // Start with LEDs in the correct state (no person detected initially)
  digitalWrite(greenLedPin, LOW);  // Green LED off
  digitalWrite(redLedPin, HIGH);  // Red LED on
  myServo.write(0);  // Servo in the closed position
}

void loop() {
  // Read the state of the IR sensor
  irSensorState = digitalRead(irSensorPin);
  
  // If a person is detected (IR sensor activated)
  if (irSensorState == HIGH) {
    // Person detected, stop red LED, turn on green LED
    digitalWrite(greenLedPin, HIGH);  // Green LED on
    digitalWrite(redLedPin, LOW);  // Red LED off
    
    // Open the servo motor for 2 seconds
    myServo.write(90);  // Open the servo (adjust the angle as needed)
    delay(2000);  // Wait for 2 seconds
    
    // Close the servo motor
    myServo.write(0);  // Close the servo back to 0 degrees
  }

  // If no person is detected
  if (irSensorState == LOW) {
    // Person not detected, stop green LED, turn on red LED
    digitalWrite(greenLedPin, LOW);  // Green LED off
    digitalWrite(redLedPin, HIGH);  // Red LED on
    
    // Keep the servo closed
    myServo.write(0);  // Ensure the servo remains in the closed position
  }
}
